{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smola\\\\OneDrive\\\\Documents\\\\GitHub\\\\Portfolio\\\\game-dev-portfolio\\\\src\\\\Project.tsx\";\nimport React from 'react';\nimport { Embed } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Project = _ref => {\n  let {\n    title,\n    dateRange,\n    description,\n    youtubeId,\n    githubUrl,\n    category,\n    technologies\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: dateRange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), githubUrl && /*#__PURE__*/_jsxDEV(\"a\", {\n        href: githubUrl,\n        children: \"GitHub\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Category: \", category]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Technologies: \", technologies.join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), youtubeId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-video\",\n      children: /*#__PURE__*/_jsxDEV(Embed, {\n        id: youtubeId,\n        source: \"youtube\",\n        placeholder: \"/images/image-16by9.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = Project;\nexport default Project;\nvar _c;\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["React","Embed","jsxDEV","_jsxDEV","Project","_ref","title","dateRange","description","youtubeId","githubUrl","category","technologies","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","join","id","source","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/smola/OneDrive/Documents/GitHub/Portfolio/game-dev-portfolio/src/Project.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Embed } from 'semantic-ui-react';\r\n\r\ninterface ProjectProps {\r\n  title: string;\r\n  dateRange: string;\r\n  description: string;\r\n  youtubeId?: string;\r\n  githubUrl?: string;\r\n  category: string;\r\n  technologies: string[];\r\n}\r\n\r\nconst Project: React.FC<ProjectProps> = ({ title, dateRange, description, youtubeId, githubUrl, category, technologies }) => {\r\n  return (\r\n    <div className=\"project\">\r\n      <div className=\"project-info\">\r\n        <h3>{title}</h3>\r\n        <p>{dateRange}</p>\r\n        <p>{description}</p>\r\n        {githubUrl && <a href={githubUrl}>GitHub</a>}\r\n        <p>Category: {category}</p>\r\n        <p>Technologies: {technologies.join(', ')}</p>\r\n      </div>\r\n      {youtubeId && (\r\n        <div className=\"project-video\">\r\n          <Embed id={youtubeId} source=\"youtube\" placeholder=\"/images/image-16by9.png\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAY1C,MAAMC,OAA+B,GAAGC,IAAA,IAAqF;EAAA,IAApF;IAAEC,KAAK;IAAEC,SAAS;IAAEC,WAAW;IAAEC,SAAS;IAAEC,SAAS;IAAEC,QAAQ;IAAEC;EAAa,CAAC,GAAAP,IAAA;EACtH,oBACEF,OAAA;IAAKU,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBX,OAAA;MAAKU,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BX,OAAA;QAAAW,QAAA,EAAKR;MAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChBf,OAAA;QAAAW,QAAA,EAAIP;MAAS;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClBf,OAAA;QAAAW,QAAA,EAAIN;MAAW;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACnBR,SAAS,iBAAIP,OAAA;QAAGgB,IAAI,EAAET,SAAU;QAAAI,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC5Cf,OAAA;QAAAW,QAAA,GAAG,YAAU,EAACH,QAAQ;MAAA;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3Bf,OAAA;QAAAW,QAAA,GAAG,gBAAc,EAACF,YAAY,CAACQ,IAAI,CAAC,IAAI,CAAC;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,EACLT,SAAS,iBACRN,OAAA;MAAKU,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BX,OAAA,CAACF,KAAK;QAACoB,EAAE,EAAEZ,SAAU;QAACa,MAAM,EAAC,SAAS;QAACC,WAAW,EAAC;MAAyB;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5E,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACM,EAAA,GAlBIpB,OAA+B;AAoBrC,eAAeA,OAAO;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}